
@page
@model SegundoEjercicio.Pages.Prestamos.IndexModel
@attribute [Microsoft.AspNetCore.Authorization.Authorize(Roles = "Bibliotecario")]

@{
    ViewData["Title"] = "Préstamos";
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h2>Préstamos</h2>
    <div class="d-flex gap-2">
        <a class="btn btn-outline-secondary" href="/Libros">Volver a Libros</a>
        <a class="btn btn-success" asp-page="Create">Nuevo préstamo</a>
    </div>
</div>
@if (!string.IsNullOrEmpty(Model.Flash))
{
    <div id="flash-alert"
         class="alert alert-warning alert-dismissible fade show"
         role="alert">
        @Model.Flash
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>

    @section Scripts {
        <script>
            // Ocultar automáticamente a los 3s
            setTimeout(() => {
              const el = document.getElementById('flash-alert');
              if (!el) return;
              if (window.bootstrap && bootstrap.Alert) {
                bootstrap.Alert.getOrCreateInstance(el).close();
              } else {
                el.classList.remove('show');
                el.remove();
              }
            }, 3000);
        </script>
    }
}




<table class="table table-striped">
    <thead>
        <tr>
            <th>Libro</th>
            <th>Socio</th>
            <th>Fecha</th>
            <th>Vence</th>
            <th>Devuelto</th>
            <th class="text-end">Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var l in Model.Loans)
        {
            <tr>
                <td>@l.Book?.Title (@l.Book?.Author?.Name)</td>
                <td>@l.Member?.FullName</td>
                <td>@l.LoanDate.ToString("yyyy-MM-dd")</td>
                <td>@l.DueDate.ToString("yyyy-MM-dd")</td>
                <td>@(l.ReturnDate?.ToString("yyyy-MM-dd") ?? "-")</td>

                <td class="text-end">
                    @* DEVOLVER: form individual por fila *@
                    @if (l.ReturnDate == null)
                    {
                        <form method="post"
                              asp-page="/Libros/Prestamos/Index"
                              asp-page-handler="Return"
                              class="d-inline">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@l.Id" />
                            <button type="submit" class="btn btn-sm btn-outline-primary">Marcar devuelto</button>
                        </form>

                        @* Eliminar deshabilitado si no está devuelto *@
                        <button class="btn btn-sm btn-outline-secondary ms-2" disabled
                                title="No se puede eliminar: no devuelto">
                            Eliminar
                        </button>
                    }
                    else
                    {
                        @* ELIMINAR: form individual por fila *@
                        <form method="post"
                              asp-page="/Libros/Prestamos/Index"
                              asp-page-handler="Delete"
                              class="d-inline"
                              onsubmit="return confirm('¿Eliminar este préstamo?');">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@l.Id" />
                            <button type="submit" class="btn btn-sm btn-outline-danger ms-2">Eliminar</button>
                        </form>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@if (!Model.Loans.Any())
{
    <div class="alert alert-info">No hay préstamos registrados.</div>
}

