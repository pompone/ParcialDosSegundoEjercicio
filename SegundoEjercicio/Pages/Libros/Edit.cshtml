@page "{id:int}"
@model SegundoEjercicio.Pages.Libros.EditModel
@attribute [Microsoft.AspNetCore.Authorization.Authorize(Roles = "Bibliotecario")]

@{
    ViewData["Title"] = "Editar libro";
}

<h2>Editar libro</h2>

<form method="post" class="row g-3">
    <input type="hidden" asp-for="Book.Id" />

    <div class="col-md-6">
        <label asp-for="Book.Title" class="form-label"></label>
        <input asp-for="Book.Title" class="form-control" />
        <span asp-validation-for="Book.Title" class="text-danger"></span>
    </div>

    <!-- Autor con “Otro…” -->
    <div class="col-md-3">
        <label class="form-label">Autor</label>
        <select asp-for="Book.AuthorId"
                asp-items="Model.Authors"
                class="form-select"
                id="AuthorSelect">
            <option value="">-- Seleccionar --</option>
            <option value="__other">Otro…</option>
        </select>
        <input type="text"
               class="form-control mt-2 @(string.IsNullOrWhiteSpace(Model.NewAuthorName) ? "d-none" : "")"
               id="NewAuthorInput"
               name="NewAuthorName"
               value="@Model.NewAuthorName"
               placeholder="Escribí el nuevo autor" />
        <span asp-validation-for="NewAuthorName" class="text-danger"></span>
    </div>

    <!-- Categoría con “Otro…” -->
    <div class="col-md-3">
        <label class="form-label">Categoría</label>
        <select asp-for="Book.CategoryId"
                asp-items="Model.Categories"
                class="form-select"
                id="CategorySelect">
            <option value="">-- Seleccionar --</option>
            <option value="__other">Otro…</option>
        </select>
        <input type="text"
               class="form-control mt-2 @(string.IsNullOrWhiteSpace(Model.NewCategoryName) ? "d-none" : "")"
               id="NewCategoryInput"
               name="NewCategoryName"
               value="@Model.NewCategoryName"
               placeholder="Escribí la nueva categoría" />
        <span asp-validation-for="NewCategoryName" class="text-danger"></span>
    </div>

    <div class="col-md-2">
        <label asp-for="Book.PublishedYear" class="form-label"></label>
        <input asp-for="Book.PublishedYear" class="form-control" />
        <span asp-validation-for="Book.PublishedYear" class="text-danger"></span>
    </div>

    <div class="col-md-4">
        <label asp-for="Book.ISBN" class="form-label"></label>
        <input asp-for="Book.ISBN" class="form-control" />
        <span asp-validation-for="Book.ISBN" class="text-danger"></span>
    </div>

    <div class="col-md-2">
        <label asp-for="Book.CopiesAvailable" class="form-label"></label>
        <input asp-for="Book.CopiesAvailable" class="form-control" />
        <span asp-validation-for="Book.CopiesAvailable" class="text-danger"></span>
    </div>

    <div class="col-12">
        <button class="btn btn-primary">Guardar cambios</button>
        <a class="btn btn-secondary" asp-page="Index">Volver</a>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
      const authorSel = document.getElementById('AuthorSelect');
      const authorInp = document.getElementById('NewAuthorInput');
      const catSel    = document.getElementById('CategorySelect');
      const catInp    = document.getElementById('NewCategoryInput');

      function toggleOther(selectEl, inputEl, fieldName) {
        if (selectEl.value === '__other') {
          inputEl.classList.remove('d-none');
          inputEl.required = true;
          // Evita bindear la FK cuando se elige “Otro…”
          selectEl.name = 'Ignore_' + fieldName;
        } else {
          inputEl.classList.add('d-none');
          inputEl.required = false;
          selectEl.name = fieldName; // restaurar binding normal
        }
      }

      function init() {
        toggleOther(authorSel, authorInp, 'Book.AuthorId');
        toggleOther(catSel,    catInp,    'Book.CategoryId');
      }

      authorSel.addEventListener('change', () => toggleOther(authorSel, authorInp, 'Book.AuthorId'));
      catSel.addEventListener('change',    () => toggleOther(catSel,    catInp,    'Book.CategoryId'));

      init();
    </script>
}




