@page
@model SegundoEjercicio.Pages.Libros.CreateModel
@attribute [Microsoft.AspNetCore.Authorization.Authorize(Roles = "Bibliotecario")]
@{
    ViewData["Title"] = "Nuevo libro";
}
<h2>Nuevo libro</h2>

@if (TempData["Flash"] is string msg)
{
  <div class="alert alert-warning alert-dismissible fade show" role="alert">
    <strong>Atención:</strong> @msg
    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
  </div>
}

<form method="post" class="row g-3">
  <div class="col-12">
    <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>
  </div>

  <div class="col-md-6">
    <label asp-for="Book.Title" class="form-label">Título</label>
    <input asp-for="Book.Title" class="form-control" />
    <span asp-validation-for="Book.Title" class="text-danger"></span>
  </div>

  <!-- Autor con “Otro…” -->
  <div class="col-md-3">
    <label class="form-label">Autor</label>
    <select asp-for="Book.AuthorId" asp-items="Model.Authors" class="form-select" id="AuthorSelect">
      <option value="">-- Seleccionar --</option>
      <option value="__other">Otro…</option>
    </select>
    <input type="text" class="form-control mt-2 d-none" id="NewAuthorInput" name="NewAuthorName" placeholder="Escribí el nuevo autor" />
  </div>

  <!-- Categoría con “Otro…” -->
  <div class="col-md-3">
    <label class="form-label">Categoría</label>
    <select asp-for="Book.CategoryId" asp-items="Model.Categories" class="form-select" id="CategorySelect">
      <option value="">-- Seleccionar --</option>
      <option value="__other">Otro…</option>
    </select>
    <input type="text" class="form-control mt-2 d-none" id="NewCategoryInput" name="NewCategoryName" placeholder="Escribí la nueva categoría" />
  </div>

  <div class="col-md-2">
    <label asp-for="Book.PublishedYear" class="form-label"></label>
    <input asp-for="Book.PublishedYear" class="form-control" />
  </div>

  <div class="col-md-4">
    <label asp-for="Book.ISBN" class="form-label"></label>
    <input asp-for="Book.ISBN" class="form-control" />
  </div>

  <div class="col-md-2">
    <label asp-for="Book.CopiesAvailable" class="form-label"></label>
    <input asp-for="Book.CopiesAvailable" class="form-control" />
  </div>

  <div class="col-12 d-flex gap-2">
    <button type="submit" class="btn btn-primary">Guardar</button>
    <a class="btn btn-secondary" asp-page="Index">Volver</a>
  </div>
</form>

@section Scripts {
  <partial name="_ValidationScriptsPartial" />
  <script>
    const authorSel = document.getElementById('AuthorSelect');
    const authorInp = document.getElementById('NewAuthorInput');
    const catSel    = document.getElementById('CategorySelect');
    const catInp    = document.getElementById('NewCategoryInput');

    function clearValidation(fieldName){
      const span = document.querySelector(`[data-valmsg-for='${fieldName}']`);
      if (span){
        setTimeout(() => {
          span.innerText = '';
          span.classList.remove('field-validation-error');
          span.classList.add('field-validation-valid');
        }, 600);
      }
    }

    function toggleOther(selectEl, inputEl, fieldName, textFieldName) {
      if (selectEl.value === '__other') {
        inputEl.classList.remove('d-none');
        inputEl.required = true;
        selectEl.name = 'Ignore_' + fieldName; // evita bindear FK
      } else {
        inputEl.classList.add('d-none');
        inputEl.required = false;
        inputEl.value = '';              // limpiar texto
        selectEl.name = fieldName;       // restaurar binding normal
        clearValidation(textFieldName);  // limpiar mensaje pegado (con delay)
      }
    }

    function init() {
      toggleOther(authorSel, authorInp, 'Book.AuthorId', 'NewAuthorName');
      toggleOther(catSel,    catInp,    'Book.CategoryId', 'NewCategoryName');
    }

    authorSel.addEventListener('change', () => toggleOther(authorSel, authorInp, 'Book.AuthorId', 'NewAuthorName'));
    catSel.addEventListener('change',    () => toggleOther(catSel,    catInp,    'Book.CategoryId', 'NewCategoryName'));
    init();
  </script>
}


